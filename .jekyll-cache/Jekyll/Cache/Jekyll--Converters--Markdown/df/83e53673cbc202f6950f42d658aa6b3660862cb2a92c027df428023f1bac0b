I">z<p>This post will demonstrate how to use the AWS Rekognition API with R to detect faces of new images as well as to attribute emotions to a given face. In order to do this, I use the <a href="https://paws-r.github.io/">paws</a> R package to interact with AWS. The output image will label a new, unseen image with the name of the individual as well as the emotions tied to the face for that image. A video of this tutorial can be
seen <a href="https://www.youtube.com/watch?v=Dd8aYsye9Qo">here</a> or below.</p>

<iframe width="655" height="405" src="https://www.youtube.com/embed/Dd8aYsye9Qo" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>

<p><br /></p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
</pre></td><td class="rouge-code"><pre><span class="c1">### AWS Face and Emotion recognition ###</span><span class="w">

</span><span class="n">library</span><span class="p">(</span><span class="n">paws</span><span class="p">)</span><span class="w">  </span><span class="c1"># used for AWS configuration</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">magick</span><span class="p">)</span><span class="w">  </span><span class="c1"># used for image functions</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">tidyverse</span><span class="p">)</span><span class="w">

</span><span class="n">aws_access_key_id</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"################"</span><span class="w">
</span><span class="n">aws_secret_access_key</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"################"</span><span class="w">

</span><span class="n">svc</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">rekognition</span><span class="p">()</span><span class="w">

</span><span class="c1">### Create an AWS collection (server-side containers) ###</span><span class="w">
</span><span class="c1"># Create a library of faces used for determining the identity of a new photo</span><span class="w">

</span><span class="n">svc</span><span class="o">$</span><span class="n">create_collection</span><span class="p">(</span><span class="n">CollectionId</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"photos-r"</span><span class="p">)</span><span class="w">
</span><span class="c1">#svc$delete_collection(CollectionId = "photos-r")</span><span class="w">

</span><span class="c1"># photos stored in directory within folders containing the person name</span><span class="w">
</span><span class="c1"># i.e. all "Danny" photos are in folder named "Danny"</span><span class="w">

</span><span class="c1"># Get the list of files</span><span class="w">
</span><span class="n">path</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"~/Desktop/face_detection/photos"</span><span class="w">
</span><span class="n">filenames</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">list.files</span><span class="p">(</span><span class="n">path</span><span class="p">,</span><span class="w"> </span><span class="n">recursive</span><span class="o">=</span><span class="kc">TRUE</span><span class="p">)</span><span class="w">

</span><span class="c1"># Loop through the files in the specified folder, add and index them in the collection</span><span class="w">
</span><span class="k">for</span><span class="p">(</span><span class="n">f</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="n">filenames</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">imgFile</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">paste</span><span class="p">(</span><span class="n">path</span><span class="p">,</span><span class="n">f</span><span class="p">,</span><span class="n">sep</span><span class="o">=</span><span class="s2">"/"</span><span class="p">)</span><span class="w">
  </span><span class="c1"># Get the person name, which is embedded in the last file path folder name</span><span class="w">
  </span><span class="n">imgName</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">unlist</span><span class="p">(</span><span class="n">strsplit</span><span class="p">(</span><span class="n">f</span><span class="p">,</span><span class="n">split</span><span class="o">=</span><span class="s2">"/"</span><span class="p">))[[</span><span class="m">1</span><span class="p">]]</span><span class="w">
  </span><span class="c1"># Add the photos and the name to the AWS collection</span><span class="w">
  </span><span class="n">svc</span><span class="o">$</span><span class="n">index_faces</span><span class="p">(</span><span class="n">CollectionId</span><span class="o">=</span><span class="s2">"photos-r"</span><span class="p">,</span><span class="w"> </span><span class="n">Image</span><span class="o">=</span><span class="nf">list</span><span class="p">(</span><span class="n">Bytes</span><span class="o">=</span><span class="n">imgFile</span><span class="p">),</span><span class="w"> </span><span class="n">ExternalImageId</span><span class="o">=</span><span class="n">imgName</span><span class="p">,</span><span class="w"> </span><span class="n">DetectionAttributes</span><span class="o">=</span><span class="nf">list</span><span class="p">())</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">svc</span><span class="o">$</span><span class="n">list_faces</span><span class="p">(</span><span class="n">CollectionId</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"photos-r"</span><span class="p">)</span><span class="w">

</span><span class="c1">### Label and identify the face of a new photo ###</span><span class="w">

</span><span class="c1"># Grab a new photo with multiple faces</span><span class="w">
</span><span class="n">group_photo</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"~/Desktop/face_detection/img1.JPG"</span><span class="w">
</span><span class="n">group_file_name</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">unlist</span><span class="p">(</span><span class="n">strsplit</span><span class="p">(</span><span class="n">group_photo</span><span class="p">,</span><span class="n">split</span><span class="o">=</span><span class="s2">"/"</span><span class="p">))[[</span><span class="m">4</span><span class="p">]]</span><span class="w">  </span><span class="c1"># used for writing out annotated file</span><span class="w">

</span><span class="c1"># Read the photo using magick</span><span class="w">
</span><span class="n">img</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">image_read</span><span class="p">(</span><span class="n">group_photo</span><span class="p">)</span><span class="w">

</span><span class="c1"># Get basic info about the photo to be used for annotation</span><span class="w">
</span><span class="n">inf</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">image_info</span><span class="p">(</span><span class="n">img</span><span class="p">)</span><span class="w">

</span><span class="c1"># Detect the faces in the image and pull all attributes associated with faces</span><span class="w">
</span><span class="n">o</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">svc</span><span class="o">$</span><span class="n">detect_faces</span><span class="p">(</span><span class="n">Image</span><span class="o">=</span><span class="nf">list</span><span class="p">(</span><span class="n">Bytes</span><span class="o">=</span><span class="n">group_photo</span><span class="p">),</span><span class="w"> </span><span class="n">Attributes</span><span class="o">=</span><span class="s2">"ALL"</span><span class="p">)</span><span class="w">

</span><span class="c1"># Get the face details</span><span class="w">
</span><span class="n">all_faces</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">o</span><span class="o">$</span><span class="n">FaceDetails</span><span class="w">
</span><span class="nf">length</span><span class="p">(</span><span class="n">all_faces</span><span class="p">)</span><span class="w">


</span><span class="c1">### For each face in photo, draw a rectange with the name and emotions ###</span><span class="w">
</span><span class="n">new.img</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">img</span><span class="w">  </span><span class="c1"># Duplicate the original image</span><span class="w">
</span><span class="n">people_df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="kc">NULL</span><span class="w">

</span><span class="k">for</span><span class="p">(</span><span class="n">face</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="n">all_faces</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">

  </span><span class="c1"># Grab emotions from AWS rekognition model</span><span class="w">
  </span><span class="n">emo_label</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="w">
  </span><span class="k">for</span><span class="p">(</span><span class="n">emo</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="n">face</span><span class="o">$</span><span class="n">Emotions</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="n">emo_label</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">paste</span><span class="p">(</span><span class="n">emo_label</span><span class="p">,</span><span class="w"> </span><span class="n">emo</span><span class="o">$</span><span class="n">Type</span><span class="p">,</span><span class="w"> </span><span class="s2">" = "</span><span class="p">,</span><span class="w"> </span><span class="nf">round</span><span class="p">(</span><span class="n">emo</span><span class="o">$</span><span class="n">Confidence</span><span class="p">,</span><span class="w"> </span><span class="m">2</span><span class="p">),</span><span class="w"> </span><span class="s2">"\n"</span><span class="p">,</span><span class="w"> </span><span class="n">sep</span><span class="o">=</span><span class="s2">""</span><span class="p">)</span><span class="w">
  </span><span class="p">}</span><span class="w">
  
  </span><span class="c1"># Grab ages from AWS rekognition</span><span class="w">
  </span><span class="n">age_label</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="w">
  </span><span class="k">for</span><span class="p">(</span><span class="n">age</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="nf">list</span><span class="p">(</span><span class="n">face</span><span class="o">$</span><span class="n">AgeRange</span><span class="p">))</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="n">age_label</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">paste</span><span class="p">(</span><span class="n">age_label</span><span class="p">,</span><span class="w"> </span><span class="s2">"AGE ESTIMATE: = "</span><span class="p">,</span><span class="w"> </span><span class="p">(</span><span class="n">age</span><span class="o">$</span><span class="n">Low</span><span class="o">+</span><span class="n">age</span><span class="o">$</span><span class="n">High</span><span class="p">)</span><span class="o">/</span><span class="m">2</span><span class="p">,</span><span class="w"> </span><span class="s2">"\n"</span><span class="p">,</span><span class="w"> </span><span class="n">sep</span><span class="o">=</span><span class="s2">""</span><span class="p">)</span><span class="w">
  </span><span class="p">}</span><span class="w">
  
  </span><span class="c1"># Grab genders from AWS rekognition</span><span class="w">
  </span><span class="c1">#gender_label = ""</span><span class="w">
  </span><span class="c1">#for(gndr in list(face$Gender)) {</span><span class="w">
  </span><span class="c1">#  gender_label = paste(gender_label, gndr$Value, " = ", round(gndr$Confidence, 2), "\n", sep="")</span><span class="w">
  </span><span class="c1">#}</span><span class="w">
  
  </span><span class="c1"># Append all lists together</span><span class="w">
  </span><span class="n">final_label</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="w">
  </span><span class="n">final_label</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">rbind</span><span class="p">(</span><span class="n">emo_label</span><span class="p">,</span><span class="w"> </span><span class="n">age_label</span><span class="p">)</span><span class="w">
  </span><span class="n">final_label</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">paste</span><span class="p">(</span><span class="n">final_label</span><span class="p">,</span><span class="w"> </span><span class="n">collapse</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">''</span><span class="p">)</span><span class="w">
  
  </span><span class="c1"># Identify the coordinates of the face. Note that AWS returns percentage values of the total image size. This is</span><span class="w">
  </span><span class="c1"># why the image info object above is needed</span><span class="w">
  </span><span class="n">box</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">face</span><span class="o">$</span><span class="n">BoundingBox</span><span class="w">
  </span><span class="n">image_width</span><span class="o">=</span><span class="n">inf</span><span class="o">$</span><span class="n">width</span><span class="w">
  </span><span class="n">image_height</span><span class="o">=</span><span class="n">inf</span><span class="o">$</span><span class="n">height</span><span class="w">
  </span><span class="n">x1</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">box</span><span class="o">$</span><span class="n">Left</span><span class="o">*</span><span class="n">image_width</span><span class="w">
  </span><span class="n">y1</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">box</span><span class="o">$</span><span class="n">Top</span><span class="o">*</span><span class="n">image_height</span><span class="w">
  </span><span class="n">x2</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">x1</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">box</span><span class="o">$</span><span class="n">Width</span><span class="o">*</span><span class="n">image_width</span><span class="w">
  </span><span class="n">y2</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">y1</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">box</span><span class="o">$</span><span class="n">Height</span><span class="o">*</span><span class="n">image_height</span><span class="w">  
  
  </span><span class="c1"># Create a subset image in memory that is just cropped around the focal face</span><span class="w">
  </span><span class="n">img.crop</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">image_crop</span><span class="p">(</span><span class="n">img</span><span class="p">,</span><span class="w"> </span><span class="n">paste</span><span class="p">(</span><span class="n">box</span><span class="o">$</span><span class="n">Width</span><span class="o">*</span><span class="n">image_width</span><span class="p">,</span><span class="s2">"x"</span><span class="p">,</span><span class="n">box</span><span class="o">$</span><span class="n">Height</span><span class="o">*</span><span class="n">image_height</span><span class="p">,</span><span class="s2">"+"</span><span class="p">,</span><span class="n">x1</span><span class="p">,</span><span class="s2">"+"</span><span class="p">,</span><span class="n">y1</span><span class="p">,</span><span class="w"> </span><span class="n">sep</span><span class="o">=</span><span class="s2">""</span><span class="p">))</span><span class="w">
  </span><span class="n">img.crop</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">image_write</span><span class="p">(</span><span class="n">img.crop</span><span class="p">,</span><span class="w"> </span><span class="n">path</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">NULL</span><span class="p">,</span><span class="w"> </span><span class="n">format</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"png"</span><span class="p">)</span><span class="w">
  
  </span><span class="c1"># Search in a specified collection to see if we can label the identity of the face is in this crop</span><span class="w">
  </span><span class="n">o</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">svc</span><span class="o">$</span><span class="n">search_faces_by_image</span><span class="p">(</span><span class="n">CollectionId</span><span class="o">=</span><span class="s2">"photos-r"</span><span class="p">,</span><span class="n">Image</span><span class="o">=</span><span class="nf">list</span><span class="p">(</span><span class="n">Bytes</span><span class="o">=</span><span class="n">img.crop</span><span class="p">),</span><span class="w"> </span><span class="n">FaceMatchThreshold</span><span class="o">=</span><span class="m">70</span><span class="p">)</span><span class="w">
  
  </span><span class="c1"># Create a graphics device version of the larger photo that we can annotate</span><span class="w">
  </span><span class="n">new.img</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">image_draw</span><span class="p">(</span><span class="n">new.img</span><span class="p">)</span><span class="w">
  
  </span><span class="c1"># If the face matches something in the collection, then add the name to the image</span><span class="w">
  </span><span class="k">if</span><span class="p">(</span><span class="nf">length</span><span class="p">(</span><span class="n">o</span><span class="o">$</span><span class="n">FaceMatches</span><span class="p">)</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="m">0</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="n">faceName</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">o</span><span class="o">$</span><span class="n">FaceMatches</span><span class="p">[[</span><span class="m">1</span><span class="p">]]</span><span class="o">$</span><span class="n">Face</span><span class="o">$</span><span class="n">ExternalImageId</span><span class="w">
    </span><span class="n">faceConfidence</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">round</span><span class="p">(</span><span class="n">o</span><span class="o">$</span><span class="n">FaceMatches</span><span class="p">[[</span><span class="m">1</span><span class="p">]]</span><span class="o">$</span><span class="n">Face</span><span class="o">$</span><span class="n">Confidence</span><span class="p">,</span><span class="m">3</span><span class="p">)</span><span class="w">
    </span><span class="n">print</span><span class="p">(</span><span class="n">paste</span><span class="p">(</span><span class="s2">"Detected: "</span><span class="p">,</span><span class="w"> </span><span class="n">faceName</span><span class="p">,</span><span class="w"> </span><span class="n">sep</span><span class="o">=</span><span class="s2">""</span><span class="p">))</span><span class="w">
    
    </span><span class="c1"># Annotate with the name of the person</span><span class="w">
    </span><span class="n">text</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">x1</span><span class="o">+</span><span class="p">(</span><span class="n">box</span><span class="o">$</span><span class="n">Width</span><span class="o">*</span><span class="n">image_width</span><span class="p">)</span><span class="o">/</span><span class="m">2</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">y1</span><span class="m">-20</span><span class="p">,</span><span class="w"> </span><span class="n">faceName</span><span class="p">,</span><span class="w"> </span><span class="n">adj</span><span class="o">=</span><span class="m">0.5</span><span class="p">,</span><span class="w"> </span><span class="n">cex</span><span class="o">=</span><span class="m">3</span><span class="p">,</span><span class="w"> </span><span class="n">col</span><span class="o">=</span><span class="s2">"green"</span><span class="p">)</span><span class="w">
  </span><span class="p">}</span><span class="w">
  
  </span><span class="c1"># Draw a rectangle around the face</span><span class="w">
  </span><span class="n">rect</span><span class="p">(</span><span class="n">x1</span><span class="p">,</span><span class="n">y1</span><span class="p">,</span><span class="n">x2</span><span class="p">,</span><span class="n">y2</span><span class="p">,</span><span class="w"> </span><span class="n">border</span><span class="o">=</span><span class="s2">"red"</span><span class="p">,</span><span class="w"> </span><span class="n">lty</span><span class="o">=</span><span class="s2">"dashed"</span><span class="p">,</span><span class="w"> </span><span class="n">lwd</span><span class="o">=</span><span class="m">5</span><span class="p">)</span><span class="w">   
  
  </span><span class="c1"># Annotate the photo with the emotions information</span><span class="w">
  </span><span class="n">text</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">x1</span><span class="o">+</span><span class="p">(</span><span class="n">box</span><span class="o">$</span><span class="n">Width</span><span class="o">*</span><span class="n">image_width</span><span class="p">)</span><span class="o">/</span><span class="m">2</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">y1</span><span class="m">+50</span><span class="p">,</span><span class="w"> </span><span class="n">final_label</span><span class="p">,</span><span class="w"> </span><span class="n">pos</span><span class="o">=</span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="n">cex</span><span class="o">=</span><span class="m">1.5</span><span class="p">,</span><span class="w"> </span><span class="n">col</span><span class="o">=</span><span class="s2">"red"</span><span class="p">)</span><span class="w">     
  
  </span><span class="c1"># Create a dataframe of individual data appended together</span><span class="w">
  </span><span class="n">individual_emotion_df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">do.call</span><span class="p">(</span><span class="n">rbind.data.frame</span><span class="p">,</span><span class="w"> </span><span class="n">face</span><span class="o">$</span><span class="n">Emotions</span><span class="p">)</span><span class="w">
  
  </span><span class="n">individual_emotion_df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">individual_emotion_df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
    </span><span class="n">spread</span><span class="p">(</span><span class="n">Type</span><span class="p">,</span><span class="w"> </span><span class="n">Confidence</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">add_column</span><span class="p">(</span><span class="n">faceName</span><span class="p">)</span><span class="w">
  </span><span class="n">individual_emotion_df</span><span class="o">$</span><span class="n">image</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">strsplit</span><span class="p">(</span><span class="n">group_file_name</span><span class="p">,</span><span class="w"> </span><span class="s2">".JPG"</span><span class="p">)</span><span class="w">
  
  </span><span class="n">individual_emotion_df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">individual_emotion_df</span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">select</span><span class="p">(</span><span class="n">faceName</span><span class="p">,</span><span class="w"> </span><span class="n">image</span><span class="p">,</span><span class="w"> </span><span class="n">everything</span><span class="p">())</span><span class="w"> </span><span class="c1"># move faceName to beginning</span><span class="w">
  
  </span><span class="n">individual_age_df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data.frame</span><span class="p">(</span><span class="n">face</span><span class="o">$</span><span class="n">AgeRange</span><span class="p">)</span><span class="w">
  </span><span class="n">colnames</span><span class="p">(</span><span class="n">individual_age_df</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"age_low"</span><span class="p">,</span><span class="w"> </span><span class="s2">"age_high"</span><span class="p">)</span><span class="w">
  
  </span><span class="n">individual_df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">cbind</span><span class="p">(</span><span class="n">individual_emotion_df</span><span class="p">,</span><span class="w"> </span><span class="n">individual_age_df</span><span class="p">)</span><span class="w">
  
  </span><span class="n">people_df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">rbind</span><span class="p">(</span><span class="n">individual_df</span><span class="p">,</span><span class="w"> </span><span class="n">people_df</span><span class="p">)</span><span class="w">
  
</span><span class="p">}</span><span class="w">
</span><span class="n">dev.off</span><span class="p">()</span><span class="w">

</span><span class="n">people_df</span><span class="o">$</span><span class="n">age_est</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="p">(</span><span class="n">people_df</span><span class="o">$</span><span class="n">age_low</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">people_df</span><span class="o">$</span><span class="n">age_high</span><span class="p">)</span><span class="o">/</span><span class="m">2</span><span class="w">
</span><span class="nf">names</span><span class="p">(</span><span class="n">people_df</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">tolower</span><span class="p">(</span><span class="nf">names</span><span class="p">(</span><span class="n">people_df</span><span class="p">))</span><span class="w">
</span><span class="n">head</span><span class="p">(</span><span class="n">people_df</span><span class="p">)</span><span class="w">

</span><span class="c1"># Write the image out to file </span><span class="w">
</span><span class="n">image_write</span><span class="p">(</span><span class="n">new.img</span><span class="p">,</span><span class="w"> </span><span class="n">path</span><span class="o">=</span><span class="n">paste0</span><span class="p">(</span><span class="s2">"~/Desktop/face_detection/annotated/annotated_"</span><span class="p">,</span><span class="w"> </span><span class="n">group_file_name</span><span class="p">))</span><span class="w">
</span></pre></td></tr></tbody></table></code></pre></div></div>

<p>Example table if you want to output the data above into a dataframe.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre>| faceName | image | angry      | calm        | confused   | disgusted   | fear        | happy    | sad         | surprised  |
|----------|-------|------------|-------------|------------|-------------|-------------|----------|-------------|------------|
| Natalie  | img1  | 0.05724448 | 0.008161878 | 0.08076324 | 0.054936308 | 0.048346419 | 99.64977 | 0.037308376 | 0.06347576 |
| Danny    | img1  | 0.01850546 | 0.008797654 | 0.01369155 | 0.005110143 | 0.009048435 | 99.88663 | 0.003529715 | 0.05468611 |
</pre></td></tr></tbody></table></code></pre></div></div>

<p><img src="/assets/images/2020-04-27-aws-rekognition/annotated_img1.JPG" alt="face-detection" />
<img src="/assets/images/2020-04-27-aws-rekognition/annotated_img2.JPG" alt="face-detection" /></p>

<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-57468410-2', 'auto');
  ga('send', 'pageview');

</script>

:ET